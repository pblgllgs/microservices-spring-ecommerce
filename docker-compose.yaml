version: '3.1'

services:

  product-service:
    container_name: mongo_db
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: product-service
    ports:
      - "27017:27017"
    volumes:
      - product_mongo_db:/data/db

  order-service:
    container_name: order_mysql_db
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_ROOT_USERNAME: root
      MYSQL_DATABASE: order_service
    ports:
      - "3306:3306"
    volumes:
      - order_mysql_db:/var/lib/mysql

  inventory-service:
    container_name: inventory_mysql_db
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_ROOT_USERNAME: root
      MYSQL_DATABASE: inventory_service
    ports:
      - "3307:3306"
    volumes:
      - inventory_mysql_db:/var/lib/mysql

  keyClock:
    container_name: keyClock
    image: quay.io/keycloak/keycloak:18.0.0
    ports:
      - "8181:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    restart: unless-stopped
    depends_on:
      - product-service
      - order-service
      - inventory-service
    command: start-dev
    volumes:
      - keyCloak_data:/opt/keycloak/data/

volumes:
  product_mongo_db:
    external: false
  order_mysql_db:
    external: false
  inventory_mysql_db:
    external: false
  keyCloak_data:
    external: false
